下载中间件

import six
导入six兼容包
from twisted.internet import defer
导入defer
from scrapy.http import Request, Response
导入请求和响应
from scrapy.middleware import MiddlewareManager
from scrapy.utils.defer import mustbe_deferred
导入中间件管理 和mustbe_defferred
from scrapy.utils.conf import build_component_list
导入构建中间件列表函数

 @classmethod
    def _get_mwlist_from_settings(cls, settings):
        return build_component_list(
            settings.getwithbase('DOWNLOADER_MIDDLEWARES'))
从设置里面获取下载中间件， 然后构建下载中间件列表

def _add_middleware(self, mw):
    if hasattr(mw, 'process_request'):
        self.methods['process_request'].append(mw.process_request)
    if hasattr(mw, 'process_response'):
        self.methods['process_response'].insert(0, mw.process_response)
    if hasattr(mw, 'process_exception'):
        self.methods['process_exception'].insert(0, mw.process_exception)
添加下载中间件，获取定义的几个方法， 并添加到对应的链上去。 

这里可以看出来， 我们自己如果写下载中间件的需要提供如下几个方法。 
process_request， process_response，process_exception 这3个方法的。 

